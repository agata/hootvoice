[package]
name = "hootvoice"
version = "0.1.0"
edition = "2021"
authors = ["HootVoice Team"]
description = "HootVoice — High‑accuracy voice input (Whisper)"
license = "MIT"
repository = "https://github.com/agata/hootvoice"
default-run = "hootvoice"

## Use the default binary name (hootvoice) at src/main.rs

[dependencies]
anyhow = "1.0.99"
hound = "3.5.1"
num_cpus = "1.17.0"
unicode_categories = "0.1"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }

# Model auto-download and API (blocking HTTP + TLS + JSON)
# Use Rustls with native OS certificate store to avoid TLS trust issues on macOS/Windows
# (and most Linux distros). This helps prevent sporadic handshake failures that can
# occur behind enterprise proxies or with non-Mozilla root stores.
reqwest = { version = "0.12", default-features = false, features = ["blocking", "json", "rustls-tls", "rustls-tls-native-roots"] }

# Microphone capture
cpal = "0.15"

# Key events (global hotkey)

# (moved to target.'cfg(unix)'.dependencies) UNIX signals via SIGUSR1/SIGUSR2

# MP3 playback
rodio = "0.19"

# Config and dictionary serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"
serde_yaml = "0.9"
image = { version = "0.24", default-features = false, features = ["png", "jpeg"] }
similar = "2.6"

# GUI
egui = "0.32"
eframe = { version = "0.32", default-features = false, features = ["default_fonts", "wgpu", "persistence", "x11", "wayland"] }
unicode-segmentation = "1.11"
lucide-icons = "0.539"
wgpu = { version = "25", features = ["vulkan", "gles", "dx12", "metal"] }

# i18n (Fluent minimal)
fluent-bundle = "0.15"
unic-langid = "0.9"
once_cell = "1"
sys-locale = "0.3"

# Global hotkey
global-hotkey = "0.6"

# System tray was removed

## Auto-update functionality was removed

# File dialogs
rfd = "0.15"

## No async runtime used

# Timestamps
chrono = "0.4"

# OS-standard config directory
directories = "5.0"
fs2 = "0.4"

# Text correction feature removed

[features]
# Optional Wayland layer-shell floating window implementation
wayland_layer = ["gtk4-layer-shell"]

[target.'cfg(unix)'.dependencies]
# UNIX-only: enable signal handling (iterator requires non-Windows)
signal-hook = { version = "0.3", features = ["iterator"] }

[target.'cfg(target_os = "linux")'.dependencies]
gtk4 = "0.9"
gtk4-layer-shell = { version = "0.5", optional = true }
whisper-rs = { version = "0.15", features = ["vulkan", "openblas"] }
libc = "0.2"

[[bin]]
name = "hootvoice-float"
path = "src/bin/hootvoice-float.rs"
required-features = ["wayland_layer"]
#whisper-rs = { version = "0.15", features = ["vulkan"] }

# Release build optimizations
[profile.release]
opt-level = 3          # maximum optimization
lto = true            # enable Link Time Optimization
codegen-units = 1     # single codegen unit (smaller size)
strip = true          # strip debug symbols
panic = "abort"       # abort without unwinding (smaller binary)

# macOS-specific
[target.'cfg(target_os = "macos")'.dependencies]
core-foundation = "0.9"
whisper-rs = { version = "0.15", features = ["metal", "coreml"] }
cocoa = "0.24"
objc = "0.2"
libc = "0.2"

# Windows-specific
[target.'cfg(target_os = "windows")'.dependencies]
# Vulkan is enabled; ensure system Vulkan SDK is installed for GPU builds
# Note: disable OpenBLAS on Windows in CI to avoid extra toolchain requirements
whisper-rs = { version = "0.15", features = ["vulkan"] }
clipboard-win = "5"

# App distribution bundle settings (cargo-bundle)
# - macOS: generate .app
# - Linux: generate bundle with .desktop and icons (AppImage via script)
[package.metadata.bundle]
name = "HootVoice"
identifier = "com.hootvoice.HootVoice"
short_description = "High‑accuracy speech input tool"
category = "Productivity"
copyright = "Copyright (c) HootVoice"
# Place icons if available (optional). Missing icons are skipped.
icon = [
    "packaging/icons/hootvoice.icns",  # macOS (.icns)
    "packaging/icons/hootvoice.png"    # Linux (.png)
]
resources = []
osx_minimum_system_version = "10.15"
