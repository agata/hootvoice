name: CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'Cargo.toml'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
      # Use sccache for Rust compilation
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 3G
      # Evaluate matrix.os at job creation time (runner is not defined)
      # Use clang+lld only on Linux (deps installed below)
      RUSTFLAGS: ${{ startsWith(matrix.os, 'ubuntu-') && '-C linker=clang -C link-arg=-fuse-ld=lld' || '' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Enable sccache
        uses: mozilla-actions/sccache-action@v0.0.6

      - name: Setup platform
        uses: ./.github/actions/setup-platform

      - name: Cache cargo target/registry
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || github.event_name == 'pull_request' }}

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Build (debug)
        run: cargo build --workspace --locked

      - name: cargo-deny (non-blocking)
        if: runner.os != 'Windows'
        continue-on-error: true
        run: |
          cargo install cargo-deny --locked || true
          cargo deny check || true
